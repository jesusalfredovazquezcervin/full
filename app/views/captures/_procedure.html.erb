<div class="row">
  <div class="col-lg-12">
    <div class="ibox">
      <div class="ibox-title">
        <h5>Procedimientos<small class="m-l-sm">Aqui tienes los procedimientos de:</small> <%=@cliente.nombre%>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <small class="m-l-sm">Ultima modificacion: <i class="fa fa-clock-o"></i> <%=@cliente.procedures.try(:order, "updated_at").last.try(:updated_at).try(:strftime, "%H:%M %P - %d.%M.%Y") %></small>

        </h5>
        <div class="ibox-tools">
          <a class="collapse-link">
            <i class="fa fa-chevron-up"></i>
          </a>
          <a class="fullscreen-link">
            <i class="fa fa-expand"></i>
          </a>
          <a class="close-link">
            <i class="fa fa-times"></i>
          </a>
        </div>
      </div>

      <!-- procedimientos -->
      <div class="ibox-content">
        <div>
          <ul class="nav nav-tabs">
            <% @cliente.procedures.order(:number).each_with_index do |p, index| %>
                <li class="<%= index == 0 ? ("active"):("") %>"><a data-toggle="tab" href="#tabprocedure-<%=index+1%>"><%=p.name%></a></li>
            <%end%>
          </ul>
          <div class="tab-content">
                <br>
                <% @cliente.procedures.order(:number).each_with_index do |procedure, pindex| %>
                    <div id="tabprocedure-<%=pindex+1%>" class="tab-pane <%= pindex == 0 ? (" active"):("") %>">
                        <%frm = "form-" << (pindex + 1).to_s%>
                          <%= form_for @information, html: {:id => frm, :class => "wizard-big"  } do |f| %>
                              <%= hidden_field_tag :cliente_id, @cliente.id %>
                              <% procedure.steps.order(:number).each_with_index do |step, idx| %>
                                  <h1><%=step.name%></h1>
                                  <fieldset>
                                    <%if procedure.form.nil?%>
                                        <fieldset>
                                          <h2><%=step.name%></h2>
                                          <div class="col-lg-12">
                                            <div class="form-group">
                                              <label>
                                                <% step.detail.split(" ").each do |p|%>
                                                    <%= p.include?("<") ? (link_to p.sub(">", "").sub("<",""), p.sub(">", "").sub("<","") , target: "_blank"):(p) %>&nbsp;
                                                <%end%><br>
                                              </label>
                                            </div>
                                          </div>
                                          <br>
                                        </fieldset>
                                    <%else%>
                                        <%if !step.form%>
                                            <fieldset>
                                              <h2><%=step.name%></h2>
                                              <div class="col-lg-12">
                                                <div class="form-group">
                                                  <label>
                                                    <% step.detail.split(" ").each do |p|%>
                                                        <%= p.include?("<") ? (link_to p.sub(">", "").sub("<",""), p.sub(">", "").sub("<","") , target: "_blank"):(p) %>&nbsp;
                                                    <%end%><br>
                                                  </label>
                                                </div>
                                              </div>
                                              <br>
                                            </fieldset>
                                        <%else%>
                                            <div class="row">
                                              <%if procedure.form.fields.count >0 %>
                                                  <h2>Formulario de: <%=procedure.form.name%></h2>
                                                  <%= hidden_field_tag :form_id, procedure.form.id %>
                                                  <div class="form-group">


                                                    <div class="i-checks"><label> <input id="<%= "rbtn_alt"<< pindex.to_s %>" type="radio" value="option1" name="<%= "a"<< pindex.to_s %>" onclick="alternos(<%=pindex%>, <%=procedure.form.fields.count%>)" > <i></i>Alternos</label></div>
                                                    <div class="i-checks"><label> <input id="<%= "rbtn_prim"<< pindex.to_s %>" type="radio"  value="option2" checked="" name="<%= "a"<< pindex.to_s %>" onclick="primarios(<%=pindex%>, <%=procedure.form.fields.count%>)"> <i></i>Primarios</label></div>

                                                  </div>
                                                  <% procedure.form.fields.order(:id).each_with_index do |field, findex| %>
                                                      <%fld = "field" << (findex + 1).to_s%>
                                                      <div class="col-lg-8">
                                                        <div   <%= field.behave == "Alterno" ? ("hidden = 'true'"):('') %> class="form-group" id = <%=  field.behave=="Primario" ? (pindex.to_s << "div_prim_" << fld):(field.behave=="Alterno" ? (pindex.to_s << "div_alt_" << fld):(pindex.to_s << "div_com_" << fld))%>>
                                                          <%type=field.data_type%>
                                                          <h5><%= (field.mandatory == true ? ("* " << field.name.to_s ):(field.name)) unless type == "Boolean" %></h5>


                                                          <%case type%>
                                                          <%when "Date"%>
                                                                  <%= f.date_select fld, class: 'form-control', required: field.mandatory ? (true):(false) , id: (field.behave=="Primario" ? (pindex.to_s << "ctl_prim_" << fld):(field.behave=="Alterno" ? (pindex.to_s << "ctl_alt_" << fld):(pindex.to_s << "ctl_com_" << fld))) << (field.mandatory ? "r":"o") %>

                                                          <%when "DateTime"%>
                                                                  <%= f.datetime_select fld, class: 'form-control', required: field.mandatory ? (true):(false) , id: (field.behave=="Primario" ? (pindex.to_s << "ctl_prim_" << fld):(field.behave=="Alterno" ? (pindex.to_s << "ctl_alt_" << fld):(pindex.to_s << "ctl_com_" << fld))) << (field.mandatory ? "r":"o") %>

                                                          <%when "Integer"%>
                                                                  <%= f.number_field fld, class: 'form-control', required: field.mandatory ? (true):(false) , id: (field.behave=="Primario" ? (pindex.to_s << "ctl_prim_" << fld):(field.behave=="Alterno" ? (pindex.to_s << "ctl_alt_" << fld):(pindex.to_s << "ctl_com_" << fld))) << (field.mandatory ? "r":"o") %>

                                                          <%when "String"%>

                                                                  <%= f.text_field fld, class: 'form-control', required: field.mandatory ? (true):(false) , id: (field.behave=="Primario" ? (pindex.to_s << "ctl_prim_" << fld):(field.behave=="Alterno" ? (pindex.to_s << "ctl_alt_" << fld):(pindex.to_s << "ctl_com_" << fld))) << (field.mandatory ? "r":"o") %>

                                                          <%when "Boolean"%>
                                                              <div class="checkbox checkbox-inline">
                                                                <%= f.check_box fld%>
                                                                <%= f.label field.name, style:"font-weight: bold;" , id: (field.behave=="Primario" ? (pindex.to_s << "ctl_prim_" << fld):(field.behave=="Alterno" ? (pindex.to_s << "ctl_alt_" << fld):(pindex.to_s << "ctl_com_" << fld))) << (field.mandatory ? "r":"o") %>
                                                              </div>
                                                          <%end%>
                                                        </div>
                                                      </div>
                                                  <%end%>

                                              <%end%>
                                            </div>
                                  <%end%>
                                    <%end%>
                                  </fieldset>
                              <%end%>
                              <h1>Terminar</h1>
                              <fieldset>
                                <h2>Pulsa finalizar para capturar y terminar</h2>
                                <input id="acceptTerms" name="acceptTerms" type="checkbox" class="required">
                                <label for="acceptTerms">He terminado apropiadamente el procedimiento <%=  procedure.deliver ? ("y se enviara correo de la captura a los contactos seleccionados"):("")%></label>
                                <br><div class="hr-line-dashed"></div>
                                <%if procedure.deliver%>
                                    <div class="form-group">
                                      <%= f.label "Destinatario", class: 'col-sm-2 control-label'%>
                                      <div class="col-sm-5">
                                        <%= select_tag :recipient, options_for_select(@cliente.contactos.where.not(email: nil).order(:nombre).collect { |c|
                                                                                        [c.nombre  << ' - ' << c.email, c.email] }, 0),  { class:"form-control m-b", style: "width:700px;",multiple: true} %>    



                                      </div>
                                    </div>
                                <%end%>
                              </fieldset>
                          <%end%>
                    </div>
                <%end%>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<% content_for :javascript do %>

    <script type="text/javascript">
      function alternos(procedure, totalfields){
          // # procedure + ctl_ + com (campo comum, primario, alterno) + # de campo (field1.. fieldN)
          //1ctl_com_field1
          //0ctl_alt_field1
          //2ctl_prim_field1
          for (i = 1; i <= totalfields; i++) {
              $("#" + procedure + "div_" + "prim_field" + i).hide(1000);
              $("#" + procedure + "div_" + "alt_field" + i).show(1000);

              //Cambiamos los obligatorios primarios a opcionales porque si no no se puede guardar
              var fld = procedure  + "ctl_prim_field" + i + "r";
              var element =  document.getElementById(fld);
              if (typeof(element) != 'undefined' && element != null){
                  document.getElementById(fld).required = false;
              }

              //Ponemos los alternos que deben ser obligatorios
              var fld = procedure  + "ctl_alt_field" + i + "r";
              var element =  document.getElementById(fld);
              if (typeof(element) != 'undefined' && element != null){
                  document.getElementById(fld).required = true;
              }


//document.getElementById(fld).required = false;
//document.getElementById("myText").required
          }
      };
      function primarios(procedure, totalfields){
          for (i = 1; i <= totalfields; i++) {
              $("#" + procedure + "div_" + "prim" + "_field" + i).show(1000);
              $("#" + procedure + "div_" + "alt" + "_field" + i).hide(1000);

              //Cambiamos los obligatorios alternos a opcionales porque si no no se puede guardar
              var fld = procedure  + "ctl_alt_field" + i + "r";
              var element =  document.getElementById(fld);
              if (typeof(element) != 'undefined' && element != null){
                  document.getElementById(fld).required = false;
              }

              //Ponemos los primarios que deben ser obligatorios
              var fld = procedure  + "ctl_prim_field" + i + "r";
              var element =  document.getElementById(fld);
              if (typeof(element) != 'undefined' && element != null){
                  document.getElementById(fld).required = true;
              }



          }
      };

        $(function() {

            $("#form-1").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                }
            });

            $("#form-2").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-3").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });



            $("#form-4").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-5").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-6").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-7").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-8").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-9").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });

            $("#form-10").steps({
                bodyTag: "fieldset",
                enableAllSteps: true,
                onFinishing: function (event, currentIndex) {
                    var form = $(this);

                    // Disable validation on fields that are disabled.
                    // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
                    form.validate().settings.ignore = ":disabled";

                    // Start validation; Prevent form submission if false
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    var form = $(this);

                    // Submit form input
                    form.submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    element.before(error);
                },
                rules: {
                    confirm: {
                        equalTo: "#password"
                    }
                }
            });


        });

    </script>

<% end %>
